<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class M_adm_event extends CI_Model {

    public function __construct()
    {
        parent::__construct();
    }

    public function getAll()
    {
        $this->db->join('tb_akun B', 'B.id_akun = A.id_akun', 'left');
        $this->db->order_by('tgl_event', 'desc');
        $this->db->where('jenis_event', 'event');
        $this->db->where('del_event', 0);
        return $this->db->get('tb_event A');
    }

    public function getAllGath()
    {
        $this->db->join('tb_akun B', 'B.id_akun = A.id_akun', 'left');
        $this->db->order_by('tgl_event', 'desc');
        $this->db->where('jenis_event', 'gathering');
        $this->db->where('del_event', 0);
        return $this->db->get('tb_event A');
    }

    public function tambah($data)
    {
        $this->db->insert('tb_event', $data);
        $email = $this->db->query("SELECT email_akun FROM `tb_akun` WHERE del_akun = 0");
        require APPPATH.'libraries/PHPMailer/PHPMailerAutoload.php';

        foreach ($email->result() as $row) {
            // $tes = $row->email_akun;
            $sendTo = $row->email_akun;
            $message = "<h1>".$data['judul_event']."</h1><br>".$data['isi_event']."<br><br> Selengkapnya klik link berikut ".base_url()."event_gathering";
            if ($data['jenis_event'] == 'event') {
                $subject = "Event Terbaru";
            } else {
                $subject = "Gathering Terbaru";
            }
            $this->SendEmail($data, $sendTo, $message, $subject);
        }
    }

    function SendEmail($data, $sendTo, $message, $subject)
    {
        $hello = '<h1 style="color:#333;font-family:Helvetica,Arial,sans-serif;font-weight:300;padding:0;margin:10px 0 25px;text-align:center;line-height:1;word-break:normal;font-size:38px;letter-spacing:-1px">Hello Teman-Teman, Ada berita terbaru di 48FansPontianak &#9786;</h1>';
        $thanks = "<br><br><i>This is autogenerated email please do not reply.</i><br/><br/>Thanks,<br/>Admin<br/><br/>";

        $mail = new PHPMailer;
        $mail->isSMTP(true); // telling the class to use SMTP
        $mail->SMTPOptions = array(
                'ssl' => array(
                    'verify_peer' => false,
                    'verify_peer_name' => false,
                    'allow_self_signed' => true
                ));
        $mail->Host = 'smtp.gmail.com';
        $mail->Port = 587;
        $mail->SMTPSecure = 'tls';
        $mail->SMTPAuth = true;
        $mail->Username = '48fansptk@gmail.com';                 // SMTP username
        $mail->Password = 'pontianak484848';                           // SMTP password

        $mail->setFrom('48fansptk@gmail.com', '48FansPontianak');
        $mail->addAddress($sendTo);     // Add a recipient
        $mail->isHTML(true);                                  // Set email format to HTML
        $mail->WordWrap = 0;
        $mail->Subject = "DO NOT REPLY - ".$subject;
        $body = $hello.$message.$thanks;
        $mail->Body = $body;
        $mail->AltBody = 'This is the body in plain text for non-HTML mail clients';

        if(!$mail->send()) {
            echo 'Message could not be sent.';
            echo 'Mailer Error: ' . $mail->ErrorInfo;
        } else {
            echo 'Message has been sent';
        }
    }

    public function GetEdit($id_event)
    {
        $this->db->where('del_event', 0);
        return $this->db->get_where('tb_event', array('id_event' => $id_event));
    }

    public function EditEvent($data, $condition)
    {
        $this->db->where($condition);
        $this->db->update('tb_event', $data);
    }

    public function editfoto($query, $condition)
    {
        $this->db->where($condition);
        $this->db->update('tb_event', $query);
    }

    public function Hapus($data, $id_event)
    {
        $this->db->where('id_event', $id_event);
        $this->db->update('tb_event', $data);
    }
}

/* End of file M_adm_event.php */
/* Location: ./application/modules/adm_event/models/M_adm_event.php */